<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CopySharp"                   
                    x:Class=" CopySharp.Theme.Blue">

    <!--***********************ProgressBar******************************************************-->
    <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B2B2B2" Offset="0"/>
            <GradientStop Color="#8C8C8C" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#BABABA" Offset="0"/>
            <GradientStop Color="#C7C7C7" Offset="0.5"/>
            <GradientStop Color="#BABABA" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarTopHighlight" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF" Offset="0.05"/>
            <GradientStop Color="#00FFFFFF" Offset="0.25"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#900026CF" Offset="0.5385"/>
            <GradientStop Color="#901B39BB" Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4" Offset="0"/>
            <GradientStop Color="#00FFFFC4" Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" StartPoint="0,1" EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4" Offset="0"/>
            <GradientStop Color="#00FFFFC4" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4" Offset="0"/>
            <GradientStop Color="#00FFFFC4" Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0C000000" Offset="0"/>
            <GradientStop Color="#20000000" Offset="0.3"/>
            <GradientStop Color="#00000000" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000" Offset="0"/>
            <GradientStop Color="#20000000" Offset="0.7"/>
            <GradientStop Color="#0C000000" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00FFFFFF" Offset="0"/>
            <GradientStop Color="#60FFFFFF" Offset="0.4"/>
            <GradientStop Color="#60FFFFFF" Offset="0.6"/>
            <GradientStop Color="#00FFFFFF" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Foreground">
        <SolidColorBrush.Color >
            <Color>#FF00C0FF</Color>
        </SolidColorBrush.Color>

    </SolidColorBrush>

    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=Foreground}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}" RadiusX="2" RadiusY="2"/>
                        <Border Background="{StaticResource ProgressBarGlassyHighlight}" Margin="1" CornerRadius="2"/>
                        <Border BorderBrush="#80FFFFFF" Background="{StaticResource ProgressBarTopHighlight}" BorderThickness="1,0,1,1" Margin="1"/>
                        <Rectangle Name="PART_Track" Margin="1">



                        </Rectangle>


                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                            <Grid Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Grid x:Name="Animation" ClipToBounds="true">
                                    <Rectangle x:Name="PART_GlowRect" Width="100" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" Margin="-100,0,0,0" HorizontalAlignment="Left">
                                    </Rectangle>
                                </Grid>
                                <Grid x:Name="Overlay">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="15"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition MaxWidth="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
                                    <Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}"
                                           Margin="0,1,1,1"/>
                                    <Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}"/>
                                    <Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffect}"/>
                                    <Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}"/>
                                    <Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarIndicatorGlassyHighlight}"/>
                                    <Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarTopHighlight}"/>
                                </Grid>
                            </Grid>
                        </Decorator>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"/>
                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" Name="ProgressBarPercent">
                            <Label.Foreground>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF181B17" Offset="0"/>
                                    <GradientStop Color="Black" Offset="1"/>
                                </LinearGradientBrush>
                            </Label.Foreground>
                            <Label.FontFamily>
                                <TemplateBindingExtension Property="FontFamily">

                                </TemplateBindingExtension>
                            </Label.FontFamily>

                            <Label.FontStretch>
                                <TemplateBindingExtension Property="FontStretch">

                                </TemplateBindingExtension>
                            </Label.FontStretch>

                            <Label.FontSize>
                                <TemplateBindingExtension Property="FontSize">

                                </TemplateBindingExtension>
                            </Label.FontSize>


                            <Label.FontStyle>
                                <TemplateBindingExtension Property="FontStyle">

                                </TemplateBindingExtension>
                            </Label.FontStyle>

                            <Label.FontWeight>
                                <TemplateBindingExtension Property="FontWeight">

                                </TemplateBindingExtension>
                            </Label.FontWeight>

                            <Label.Content>
                                <TemplateBindingExtension Property="Value">
                                    <TemplateBindingExtension.Converter>
                                        <local:PercentConverter></local:PercentConverter>
                                    </TemplateBindingExtension.Converter>
                                </TemplateBindingExtension>
                            </Label.Content>
                            <Label.BitmapEffect>
                                <DropShadowBitmapEffect Softness="60" ShadowDepth="3"/>
                            </Label.BitmapEffect>
                        </Label>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                             Value="Vertical">
                            <Setter TargetName="TemplateRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsIndeterminate"
                             Value="true">
                            <Setter TargetName="LeftDark"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="RightDark"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="LeftLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="CenterLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="RightLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="Indicator"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="ProgressBarPercent"
                                Property="Content"
                                Value="Iniciando"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                             Value="false">
                            <Setter TargetName="Animation"
                                Property="Background"
                                Value="#80B5FFA9"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="ProgressBar.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:1" Storyboard.TargetProperty="Foreground.Color"  From="Black" To="White" RepeatBehavior="Forever" AutoReverse="True">

                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>



    </Style>


    <!--***********************Button******************************************************-->
    <LinearGradientBrush x:Key="PressedBackground" StartPoint="0,1" EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBEBFBF" Offset="0"></GradientStop>
            <GradientStop Color="#FF25FB42" Offset="0.5"></GradientStop>
            <GradientStop Color="#FF25FB42" Offset="0.85"></GradientStop>
            <GradientStop Color="#FF195B89" Offset="0.97"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledBackground" StartPoint="0,1" EndPoint="0,0" >
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="Gray"></GradientStop>
            <GradientStop Color="DarkGray"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="Border" RadiusX="1" RadiusY="5" GradientOrigin="0.5,0.3">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="Blue" Offset="1" />
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="FocusedGradient" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="AliceBlue" Offset="0"></GradientStop>
            <GradientStop Color="#FF25FB42" Offset="0.5"></GradientStop>
            <GradientStop Color="#FF25FB42" Offset="0.85"></GradientStop>
            <GradientStop Color="#FF195B89" Offset="0.97"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultBackground" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBEBFBF" Offset="0"></GradientStop>
            <GradientStop Color="#FF25A3FB" Offset="0.4"></GradientStop>
            <GradientStop Color="#FF25A3FB" Offset="0.85"></GradientStop>
            <GradientStop Color="#FF195B89" Offset="0.97"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DefaultBackground}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Name="Border" BorderBrush="{StaticResource Border}" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}">

                        <Grid>
                            <Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black" StrokeThickness="2" StrokeDashArray="2 2" SnapsToDevicePixels="True"></Rectangle>
                            <Rectangle Name="Focused" Opacity="0" Fill="{StaticResource FocusedGradient}"></Rectangle>
                            <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"></ContentPresenter>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Focused" From="0" To="1" Duration="0:0:1" AccelerationRatio="0.25" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd" ></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="GotFocus">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Focused" From="0" To="1" Duration="0:0:1" AccelerationRatio="0.25" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd" ></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Focused" From="1" To="0" Duration="0:0:1" AccelerationRatio="0.25" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd" ></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Focused" From="1" To="0" Duration="0:0:1" AccelerationRatio="0.25" Storyboard.TargetProperty="Opacity" FillBehavior="HoldEnd" ></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>



                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusCue" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackground}"></Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackground}"></Setter>
                            <Setter TargetName="Focused" Property="Visibility" Value="Hidden"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--***********************ListView******************************************************-->
    <SolidColorBrush x:Key="OddsItemBackground" Color="#FF1888F9">

    </SolidColorBrush>

    <SolidColorBrush x:Key="EvenItemBackground" Color="#FF1C6FC1">

    </SolidColorBrush>

    <LinearGradientBrush x:Key="ListViewColumnBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF1888F9" Offset="0"/>
            <GradientStop Color="#FF1D6CBB" Offset="0.4"/>
            <GradientStop Color="#FF1888F9" Offset="0.9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListViewBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF1888F9" Offset="0"/>
            <GradientStop Color="#FF1C84EC" Offset="0.4"/>
            <GradientStop Color="#FF1C6FC1" Offset="0.9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultColumnGradient" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="AliceBlue" Offset="0"></GradientStop>
            <GradientStop Color="#FF3A3938" Offset="0.5"></GradientStop>
            <GradientStop Color="#FF242524" Offset="0.85"></GradientStop>
            <GradientStop Color="Black" Offset="0.97"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedColumnGradient" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF56FB4E" Offset="0"></GradientStop>
            <GradientStop Color="#FF24A41E" Offset="0.5"></GradientStop>
            <GradientStop Color="#FF27C71F" Offset="0.85"></GradientStop>
            <GradientStop Color="#FF37FD2E" Offset="0.97"></GradientStop>

        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Polygon x:Key="FromPoligon"  Stroke="Black" Opacity="0" Margin="2" Points="0,0 6,6 0,12" Fill="{StaticResource SelectedColumnGradient}" Grid.Column="0" Width="10" >
        <Polygon.Triggers>
            <EventTrigger RoutedEvent="Polygon.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" RepeatBehavior="Forever" From="0" To="1" AutoReverse="True" Duration="0:0:1"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Polygon.Triggers>
    </Polygon>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border BorderThickness="1" BorderBrush="{StaticResource ResourceKey=Border}">
                        <Grid Background="DarkBlue">
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnsHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">

                    <Grid Background="{StaticResource ListViewColumnBackground}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition >
                            </ColumnDefinition>
                            <ColumnDefinition Width="3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>


                        <ContentPresenter ></ContentPresenter>
                        <!--<Button Focusable="False">
                        </Button>-->
                        <Thumb Grid.Column="1" DockPanel.Dock="Right" x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Background="Transparent"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FileListView" TargetType="{x:Type ListView}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="AlternationCount" Value="2"></Setter>
        <Setter Property="Background" Value="{StaticResource ListViewBackground}"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="{StaticResource OddsItemBackground}"></Setter>
                    <Setter Property="Margin" Value="0"></Setter>
                    <Setter Property="Padding" Value="0"></Setter>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource EvenItemBackground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{StaticResource Foreground}"></Setter>
                        </Trigger>
                    </Style.Triggers>


                </Style>

            </Setter.Value>
        </Setter>

    </Style>


    <!--*************************************************************************Files Context Menu*****************************-->


    <!--*************************************************************************Window Style*****************************-->
    <LinearGradientBrush x:Key="WindowContentBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF2B579A"></GradientStop>
            <GradientStop Offset="1" Color="#FF2E75B5"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type Window}">
        <Border Name="windowFrame" Width="Auto" Height="Auto" BorderBrush="#395984" BorderThickness="1" CornerRadius="3,20,10,10" Background="{StaticResource WindowContentBackground}" >       
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <!-- The title bar. -->
                <Grid MouseLeftButtonDown="titleBar_MouseLeftButtonDown"  HorizontalAlignment="Stretch">
                    <Border  Loaded="ImgLoad" CornerRadius="0,20,0,0" Height="45" HorizontalAlignment="Stretch"></Border>
                    <TextBlock Text="{TemplateBinding Title}" Foreground="White" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                </Grid>
                <Grid HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="3"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0"  HorizontalAlignment="Right" CornerRadius="0,0,5,5" MouseUp="MinimizeButton_Click"  Width="30" Height="25" VerticalAlignment="Top">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FF0F70FB" Offset="0"></GradientStop>
                                        <GradientStop Color="#FF0F62DA" Offset="0.5"></GradientStop>
                                        <GradientStop Color="#FF0B346E" Offset="0.9"></GradientStop>                                   
                                </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Direction="220" ShadowDepth="0"></DropShadowEffect>
                            </Border.Effect>

                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseEnter">
                                    <BeginStoryboard Name="MinimizeMouseEnter" >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[0].Color" To="#FF0F24FB"  Duration="0:0:0:1" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[1].Color" To="#FF3D0FDA"  Duration="0:0:0:1" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" To="#FF140B6E"  Duration="0:0:0:1" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.ShadowDepth" To="3" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            <EventTrigger RoutedEvent="MouseDown">
                                <StopStoryboard BeginStoryboardName="MinimizeMouseEnter"></StopStoryboard>
                                <BeginStoryboard Name="MinimizeMouseDown">
                                    <Storyboard >
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[0].Color" To="#FF081274"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[1].Color" To="#FF3D0FDA"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" To="#FF140B6E"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Effect.ShadowDepth" To="3" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>


                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <StopStoryboard BeginStoryboardName="MinimizeMouseEnter"></StopStoryboard>
                                <StopStoryboard BeginStoryboardName="MinimizeMouseDown"></StopStoryboard>
                            </EventTrigger>

                        </Border.Triggers>
                            <Path Fill="Yellow" Stroke="AliceBlue" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="3,12" EndPoint="12,12"></LineGeometry>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Border>
                        <Border Grid.Column="2"  HorizontalAlignment="Right" CornerRadius="0,20,0,5" MouseUp="CloseButton_Click"  Width="40" Height="25" VerticalAlignment="Top">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFFB900F" Offset="0"></GradientStop>
                                        <GradientStop Color="#FFD47A0D" Offset="0.5"></GradientStop>
                                        <GradientStop Color="#FF975609" Offset="0.9"></GradientStop>
                                </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Direction="220" ShadowDepth="0"></DropShadowEffect>
                            </Border.Effect>

                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseEnter">
                                    <BeginStoryboard Name="CloseMouseEnter" >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[0].Color" To="#FFFB240F"  Duration="0:0:0:5" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[1].Color" To="#FFD40D0D"  Duration="0:0:0:5" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" To="#FF970909"  Duration="0:0:0:5" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.ShadowDepth" To="3" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            <EventTrigger RoutedEvent="MouseDown">
                                <StopStoryboard BeginStoryboardName="MinimizeMouseEnter"></StopStoryboard>
                                <BeginStoryboard Name="CloseMouseDown">
                                    <Storyboard >
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[0].Color" To="#FFFB0F0F"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[1].Color" To="#FFCD3E3E"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" To="#FFFB0F0F"  Duration="0:0:0:0" FillBehavior="HoldEnd" ></ColorAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Effect.ShadowDepth" To="1" Duration="0:0:0" AutoReverse="True" FillBehavior="HoldEnd"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <StopStoryboard BeginStoryboardName="CloseMouseEnter"></StopStoryboard>
                                <StopStoryboard BeginStoryboardName="CloseMouseDown"></StopStoryboard>
                            </EventTrigger>
                            </Border.Triggers>
                            <Path Fill="Yellow" Stroke="AliceBlue" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="3,3" EndPoint="12,12"></LineGeometry>
                                        <LineGeometry StartPoint="3,12" EndPoint="12,3"></LineGeometry>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Border>
                    </Grid>
                
                <!-- The window content. -->
                <Border Grid.Row="1">
                    <AdornerDecorator>
                        <ContentPresenter></ContentPresenter>
                    </AdornerDecorator>
                </Border>
                <!-- The footer. -->
                <ContentPresenter Grid.Row="2" Margin="10" HorizontalAlignment="Center" Content="{TemplateBinding Tag}"></ContentPresenter>
                <!-- The resize grip. -->
                <ResizeGrip Name="WindowResizeGrip" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
                <!-- The invisible rectangles that allow dragging to resize. -->
                <Rectangle Grid.Row="1" Grid.RowSpan="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right" Fill="Transparent" Width="5"
                            MouseLeftButtonDown="window_initiateWiden" MouseMove="window_Widen"></Rectangle>
                <!--MouseLeftButtonUp="window_endWiden"-->
                <Rectangle Grid.Row="2"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="Transparent" Height="5"></Rectangle>
                <!--Cursor="SizeNS"-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"></Setter>
                
            </Trigger>
         


        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    
   
    
    <!--Para Usrarla-->
    <!--<Style x:Key="CustomWindowChrome" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"></Setter>
        <Setter Property="SizeToContent" Value="WidthAndHeight"></Setter>
    </Style>-->



    <!--*************************************************************************Expander Style************************** -->
    <!--
    <SolidColorBrush x:Key="ForegroundBrush" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="HeaderBrush" Color="Blue"></SolidColorBrush>
    <SolidColorBrush x:Key="NormalBorderBrush" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="NormalBrush" Color="Cyan"></SolidColorBrush>
    <SolidColorBrush x:Key="GroupBackgroundBrush" Color="Yellow"></SolidColorBrush>
    <SolidColorBrush x:Key="OpenGroupBorderBrush" Color="Gray"></SolidColorBrush>
    <SolidColorBrush x:Key="OpenHeaderBorderBrush" Color="Green"></SolidColorBrush>

    -->
    <!--<ControlTemplate x:Key="ExpanderToggleButton"  TargetType="ToggleButton">
        <ToggleButton IsChecked="{TemplateBinding IsChecked}" >
            
        </ToggleButton>        
    </ControlTemplate>-->
    <!--

    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                -->
    <!-- Control template for expander -->
    <!--
                <ControlTemplate TargetType="Expander">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0" Background="{StaticResource HeaderBrush}"  BorderBrush="{StaticResource NormalBorderBrush}"  BorderThickness="1" CornerRadius="4,4,0,0" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                -->
    <!-- The following puts the toggle button in the right hand column, just like I want! -->
    <!--
                                <ToggleButton Name="D" Grid.Column="1" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=Expander}}"  Width="20" Height="20"
                                               Background="{StaticResource NormalBrush}" />
                                <ContentPresenter Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" Background="{StaticResource GroupBackgroundBrush}" BorderBrush="{StaticResource OpenGroupBorderBrush}"  CornerRadius="0,0,4,4" >
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource OpenHeaderBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>


                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Setter Property="IsExpanded" Value="{Binding ElementName=button, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></Setter>
    </Style>-->

</ResourceDictionary>